angular.module("angularValidator",[]),angular.module("angularValidator").directive("angularValidator",["$injector","$parse","$compile",function(a,b,c){return{restrict:"A",link:function(c,d,e,f){function g(b){return!!(b&&"invalid-message"in b.attributes)&&a.get(b.attributes["invalid-message"].value)}function h(a){for(var b=g(a),c=0;c<a.length;c++)c in a&&i(a[c],b)}function i(a,b){"validate-on"in a.attributes&&"blur"===a.attributes["validate-on"].value&&angular.element(a).on("blur",function(){m(a,b),p(a)});var d=c.$watch(function(){return a.value+a.required+s.submitted+l(a)+j(s[a.name])+k(s[a.name])},function(){if(s.submitted)m(a,b),p(a);else{"validate-on"in a.attributes&&"dirty"===a.attributes["validate-on"].value?(m(a,b),p(a)):s[a.name]&&s[a.name].$pristine&&(m(a,b),p(a))}});r.push(d)}function j(a){if(a&&"$dirty"in a)return a.$dirty}function k(a){if(a&&"$valid"in a)return a.$valid}function l(a){if("validator"in a.attributes){var b=c.$eval(a.attributes.validator.value);return s[a.name].$setValidity("angularValidator",b),b}}function m(a,b){var c=function(){return"<i class='fa fa-times'></i> Required"},d=function(){return"<i class='fa fa-times'></i> Invalid"};if(a.name in s){var e=s[a.name],f=o(a);f&&f.remove(),"angular-validator-quiet"in q.attributes||"angular-validator-quiet"in a.attributes||(e.$dirty||s.submitted)&&(e.$error.required?"required-message"in a.attributes?angular.element(a).after(n(a.attributes["required-message"].value)):angular.element(a).after(n(c)):e.$valid||("invalid-message"in a.attributes?angular.element(a).after(n(a.attributes["invalid-message"].value)):b?angular.element(a).after(n(b.message(e,a))):angular.element(a).after(n(d))))}}function n(a){return"<label class='control-label has-error validationMessage'>"+c.$eval(a)+"</label>"}function o(a){for(var b=angular.element(a).parent().children(),c=0;c<b.length;c++)if(angular.element(b[c]).hasClass("validationMessage"))return angular.element(b[c]);return!1}function p(a){if(a.name in s){var b=s[a.name];angular.element(a).removeClass("has-error"),angular.element(a.parentNode).removeClass("has-error"),(b.$dirty||s.submitted)&&b.$invalid&&(angular.element(a.parentNode).addClass("has-error"),angular.element(a).addClass("has-error"))}}if(!e.name)throw new Error("You must provide a name for the form to validate");angular.forEach(d.find("input,select,textarea"),function(a){a=$(a),a.attr("name")||console.log("WARNING! AngularValidator -> One of your form elements(<input>, <textarea>, <select>) is missing a name.And as such this field will not be validated.")});var q=angular.element(d)[0],r=[],s=b(e.name)(c);s.submitted=!1,c.$watch(function(){return Object.keys(s).length},function(){angular.forEach(r,function(a){a()}),h(q)}),d.on("submit",function(a){a.preventDefault(),c.$apply(function(){s.submitted=!0}),s.$valid&&c.$apply(function(){c.$eval(e.angularValidatorSubmit)})}),s.reset=function(){angular.forEach(q,function(a){a.name&&s[a.name]&&(s[a.name].$setViewValue(""),s[a.name].$render())}),s.submitted=!1,s.$setPristine()},h(q)}}}]);